(declare-const prt Bool)
(declare-const red_MR Bool)
(declare-const circuit Bool)
(declare-const red_SR Bool)
(declare-const org_SR Bool)
(declare-const rd2 Bool)
(declare-const grn_SR Bool)
(declare-const rd1 Bool)
(declare-const org_MR Bool)
(declare-const org Bool)
(declare-const grn_MR Bool)
(declare-const grn Bool)
(assume @p1 (= grn_MR grn))
(assume @p2 (= org_MR org))
(assume @p3 (= grn_SR rd1))
(assume @p4 (= org_SR rd2))
(assume @p5 (= red_SR (or grn org)))
(assume @p6 (= red_SR (or grn_MR org_MR)))
(assume @p7 circuit)
(assume @p8 rd2)
(assume @p9 red_MR)
(assume @p10 (or grn_SR org_SR))
(assume @p11 (not rd2))
(assume @p12 (not grn))
(assume @p13 (not org))
(assume @p14 (not (or prt (not rd1))))
(step @p15 false :rule contra :premises (@p8 @p11))
