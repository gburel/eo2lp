(declare-type @Pair (Type Type))
(declare-const @pair (-> (! Type :var U :implicit) (! Type :var T :implicit) U T (@Pair U T)))

; untyped list
(declare-type @List ())
(declare-const @list.nil @List)
(declare-const @list (-> (! Type :var T :implicit) T @List @List))
; remove :right-assoc-nil because we don't need it yet and it causes problems.

(program-schema :right-assoc-nil $singleton_elim
  ((T1 Type) (T2 Type) (x1 T1) (x2 T2 :list) (x T2) (cons (-> T1 T2 T2)) (nil T2))
  (T2) T2
  (
    (($singleton_elim (cons x1 x2))  (eo::ite (eo::is_eq x2 nil) x1 (cons x1 x2)))
    (($singleton_elim x)          x)
  )
)
